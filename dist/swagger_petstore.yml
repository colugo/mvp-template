{
  "openapi": "3.0.0",
  "security": [
    {
      "AuthorizerScheme": []
    }
  ],
  "info": {
    "title": "Cargo Exports ICS API",
    "description": "All export cargo must be reported to Customs. This information is critical for Customs to make risk assessment decisions. \n\nFor Customs purposes, an export is the removal of goods, by vessel or aircraft, from a place in Australia to a place outside Australia. The exportation of goods from Australia is subject to Customs controls, and may be prohibited or subject to restrictions. The exportation of services is not subject to Customs controls.\n\nGenerally, goods intended for export must be entered for exportation, and will be assigned a Customs Authority Number (CAN) when an authority to deal with the goods is given.\n\nIn-transit and transhipment cargo must also be reported to Customs electronically at export.",
    "version": "unreleased",
    "contact": {
      "email": "support@gosource.com.au",
      "url": "https://example.com/help"
    }
  },
  "paths": {
    "/terminal-receival": {
      "post": {
        "tags": [
          "TerminalReceival"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/correlationIdHeader"
          },
          {
            "$ref": "#/components/parameters/requestIdHeader"
          },
          {
            "$ref": "#/components/parameters/transactionIdHeader"
          }
        ],
        "responses": {
          "201": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TerminalReceival"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "409": {
            "$ref": "#/components/responses/409"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        },
        "summary": "Create a new TerminalReceival",
        "operationId": "createTerminalReceival",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TerminalReceival"
              }
            }
          }
        },
        "description": "The CTO/cargo handler must, within three hours of the cargo being delivered to the wharf or airport, lodge a Terminal Receival notice.\n\nThe CTO receival notice will include information about:\n* where the goods have been received – this will be an establishment identifier\n* the authority for the goods to be dealt with, which will be either:\n  * an EDN\n  * an ACEAN\n  * a CRN\n  * a transhipment number, or\n  * an export entry exemption code.\n* identification of the cargo, for example:\n  * air waybill number for air cargo\n  * shipping container number, for containerised sea cargo\n  * bill of lading number or booking reference, for non\u0002containerised sea cargo.\n• the intended date of export for air cargo, or the vessel, voyage and\nresponsible shipping company for sea cargo",
        "security": [
          {
            "ClientCredentials": [
              "ce:tm:c"
            ]
          },
          {
            "AuthorizerScheme": [
              "ce:tm:c"
            ]
          }
        ]
      }
    },
    "/terminal-receival/{id}": {
      "get": {
        "tags": [
          "TerminalReceival"
        ],
        "parameters": [
          {
            "name": "id",
            "description": "",
            "schema": {
              "type": "string"
            },
            "in": "path",
            "required": true
          },
          {
            "$ref": "#/components/parameters/correlationIdHeader"
          },
          {
            "$ref": "#/components/parameters/requestIdHeader"
          },
          {
            "$ref": "#/components/parameters/transactionIdHeader"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TerminalReceival"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "409": {
            "$ref": "#/components/responses/409"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        },
        "summary": "Get a TerminalReceival",
        "operationId": "getTerminalReceivalById",
        "description": "It is possible to fetch a CTO receival notice that has previously been lodged, by performing a GET request using the identifier returned when lodging the recieval. You can only fetch notices created using your company’s reporting party identifier.",
        "security": [
          {
            "ClientCredentials": [
              "ce:tm:r"
            ]
          },
          {
            "AuthorizerScheme": [
              "ce:tm:r"
            ]
          }
        ]
      },
      "put": {
        "tags": [
          "TerminalReceival"
        ],
        "parameters": [
          {
            "name": "id",
            "description": "",
            "schema": {
              "type": "string"
            },
            "in": "path",
            "required": true
          },
          {
            "$ref": "#/components/parameters/correlationIdHeader"
          },
          {
            "$ref": "#/components/parameters/requestIdHeader"
          },
          {
            "$ref": "#/components/parameters/transactionIdHeader"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TerminalReceival"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "409": {
            "$ref": "#/components/responses/409"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        },
        "summary": "Replace a TerminalReceival",
        "operationId": "replaceTerminalReceivalById",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TerminalReceival"
              }
            }
          }
        },
        "description": "If required, you can replace a submitted CTO Receival using the ID returned when performing the initial lodgement. Only the reporter who lodged the notice can make subsequent changes to it. Replacement requests require full data replacement. ",
        "security": [
          {
            "ClientCredentials": [
              "ce:tm:u"
            ]
          },
          {
            "AuthorizerScheme": [
              "ce:tm:u"
            ]
          }
        ]
      },
      "delete": {
        "tags": [
          "TerminalReceival"
        ],
        "parameters": [
          {
            "name": "id",
            "description": "",
            "schema": {
              "type": "string"
            },
            "in": "path",
            "required": true
          },
          {
            "$ref": "#/components/parameters/correlationIdHeader"
          },
          {
            "$ref": "#/components/parameters/requestIdHeader"
          },
          {
            "$ref": "#/components/parameters/transactionIdHeader"
          }
        ],
        "responses": {
          "204": {
            "description": "OK"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "409": {
            "$ref": "#/components/responses/409"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        },
        "summary": "Delete a TerminalReceival",
        "operationId": "deleteTerminalReceivalById",
        "description": "If required, you can withraw a submitted CTO Receival using the ID returned when performing the initial lodgement. Only users with appropriate access will be able to perform this request.",
        "security": [
          {
            "ClientCredentials": [
              "ce:tm:d"
            ]
          },
          {
            "AuthorizerScheme": [
              "ce:tm:d"
            ]
          }
        ]
      },
      "patch": {
        "tags": [
          "TerminalReceival"
        ],
        "parameters": [
          {
            "name": "id",
            "description": "",
            "schema": {
              "type": "string"
            },
            "in": "path",
            "required": true
          },
          {
            "$ref": "#/components/parameters/correlationIdHeader"
          },
          {
            "$ref": "#/components/parameters/requestIdHeader"
          },
          {
            "$ref": "#/components/parameters/transactionIdHeader"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TerminalReceival"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "409": {
            "$ref": "#/components/responses/409"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        },
        "summary": "Update a TerminalReceival",
        "operationId": "updateTerminalReceivalById",
        "description": "If required, you can make amendments to a submitted CTO Receival using the ID returned when performing the initial lodgement. Only the reporter who lodged the notice can make subsequent changes to it. Significant amendments, particularly those involving goods subject to a permit may be subject to further investigation.\n\nBy requesting to update a submitted terminal receival, you can update the header detail without having to include the consignment data.",
        "security": [
          {
            "ClientCredentials": [
              "ce:tm:u"
            ]
          },
          {
            "AuthorizerScheme": [
              "ce:tm:u"
            ]
          }
        ]
      }
    },
    "/terminal-receival/{id}/consignments": {
      "post": {
        "tags": [
          "TerminalReceival"
        ],
        "parameters": [
          {
            "name": "id",
            "description": "",
            "schema": {
              "type": "string"
            },
            "in": "path",
            "required": true
          },
          {
            "$ref": "#/components/parameters/correlationIdHeader"
          },
          {
            "$ref": "#/components/parameters/requestIdHeader"
          },
          {
            "$ref": "#/components/parameters/transactionIdHeader"
          }
        ],
        "responses": {
          "201": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Consignment"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "409": {
            "$ref": "#/components/responses/409"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        },
        "summary": "Create a new TerminalReceival Consignment",
        "operationId": "createTerminalReceivalConsignment",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Consignment"
              }
            }
          }
        },
        "description": "Consignments can be added to a submitted terminal receival if required.",
        "security": [
          {
            "ClientCredentials": [
              "ce:tm:c"
            ]
          },
          {
            "AuthorizerScheme": [
              "ce:tm:c"
            ]
          }
        ]
      }
    },
    "/terminal-receival/{id}/consignments/{billNumber}": {
      "get": {
        "tags": [
          "TerminalReceival"
        ],
        "parameters": [
          {
            "name": "id",
            "description": "",
            "schema": {
              "type": "string"
            },
            "in": "path",
            "required": true
          },
          {
            "name": "billNumber",
            "description": "",
            "schema": {
              "type": "string"
            },
            "in": "path",
            "required": true
          },
          {
            "$ref": "#/components/parameters/correlationIdHeader"
          },
          {
            "$ref": "#/components/parameters/requestIdHeader"
          },
          {
            "$ref": "#/components/parameters/transactionIdHeader"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Consignment"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "409": {
            "$ref": "#/components/responses/409"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        },
        "summary": "Get a TerminalReceival Consignment",
        "operationId": "getTerminalReceivalConsignmentById",
        "description": "It is possible to fetch a specific consignment of a terminal receival notice that has previously been lodged, by performing a GET request using the consignment bill number. You can only fetch notices created using your company’s reporting party identifier.",
        "security": [
          {
            "ClientCredentials": [
              "ce:tm:r",
              "ce:co:r"
            ]
          },
          {
            "AuthorizerScheme": [
              "ce:tm:r",
              "ce:co:r"
            ]
          }
        ]
      },
      "put": {
        "tags": [
          "TerminalReceival"
        ],
        "parameters": [
          {
            "name": "id",
            "description": "",
            "schema": {
              "type": "string"
            },
            "in": "path",
            "required": true
          },
          {
            "name": "billNumber",
            "description": "",
            "schema": {
              "type": "string"
            },
            "in": "path",
            "required": true
          },
          {
            "$ref": "#/components/parameters/correlationIdHeader"
          },
          {
            "$ref": "#/components/parameters/requestIdHeader"
          },
          {
            "$ref": "#/components/parameters/transactionIdHeader"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Consignment"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "409": {
            "$ref": "#/components/responses/409"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        },
        "summary": "Replace a TerminalReceival Consignment",
        "operationId": "replaceTerminalReceivalConsignmentById",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Consignment"
              }
            }
          }
        },
        "description": "It is possible to replace a specific consignment of a terminal receival notice that has previously been lodged, by performing a PUT request using the consignment bill number. You can only fetch notices created using your company’s reporting party identifier.",
        "security": [
          {
            "ClientCredentials": [
              "ce:tm:u",
              "ce:co:u"
            ]
          },
          {
            "AuthorizerScheme": [
              "ce:tm:u",
              "ce:co:u"
            ]
          }
        ]
      },
      "delete": {
        "tags": [
          "TerminalReceival"
        ],
        "parameters": [
          {
            "name": "id",
            "description": "",
            "schema": {
              "type": "string"
            },
            "in": "path",
            "required": true
          },
          {
            "name": "billNumber",
            "description": "",
            "schema": {
              "type": "string"
            },
            "in": "path",
            "required": true
          },
          {
            "$ref": "#/components/parameters/correlationIdHeader"
          },
          {
            "$ref": "#/components/parameters/requestIdHeader"
          },
          {
            "$ref": "#/components/parameters/transactionIdHeader"
          }
        ],
        "responses": {
          "204": {
            "description": "OK"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "409": {
            "$ref": "#/components/responses/409"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        },
        "summary": "Delete a TerminalReceival Consignment",
        "operationId": "deleteTerminalReceivalConsignmentById",
        "description": "It is possible to delete a specific consignment of a terminal receival notice that has previously been lodged, by performing a DELETE request using the consignment bill number. You can only fetch notices created using your company’s reporting party identifier.",
        "security": [
          {
            "ClientCredentials": [
              "ce:tm:d",
              "ce:co:d"
            ]
          },
          {
            "AuthorizerScheme": [
              "ce:tm:d",
              "ce:co:d"
            ]
          }
        ]
      }
    },
    "/air-manifest": {
      "post": {
        "tags": [
          "AirManifest"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/correlationIdHeader"
          },
          {
            "$ref": "#/components/parameters/requestIdHeader"
          },
          {
            "$ref": "#/components/parameters/transactionIdHeader"
          }
        ],
        "responses": {
          "201": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AirManifest"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "409": {
            "$ref": "#/components/responses/409"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        },
        "summary": "Create a new AirManifest",
        "operationId": "createAirManifest",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AirManifest"
              }
            }
          }
        },
        "description": "A manifest, sometimes called a main manifest, is required for every aircraft that departs from an airport in Australia. The manifest must be lodged with Customs not later than three days (excluding Sundays and public holidays) after the day of departure of the aircraft.\n\nThe manifest lists all cargo loaded on board the aircraft.",
        "security": [
          {
            "ClientCredentials": [
              "ce:mn:c"
            ]
          },
          {
            "AuthorizerScheme": [
              "ce:mn:c"
            ]
          }
        ]
      }
    },
    "/air-manifest/{id}": {
      "get": {
        "tags": [
          "AirManifest"
        ],
        "parameters": [
          {
            "name": "id",
            "description": "",
            "schema": {
              "type": "string"
            },
            "in": "path",
            "required": true
          },
          {
            "$ref": "#/components/parameters/correlationIdHeader"
          },
          {
            "$ref": "#/components/parameters/requestIdHeader"
          },
          {
            "$ref": "#/components/parameters/transactionIdHeader"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AirManifest"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "409": {
            "$ref": "#/components/responses/409"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        },
        "summary": "Get an AirManifest",
        "operationId": "getAirManifestById",
        "description": "It is possible to fetch a manifest notice that has previously been lodged, by performing a GET request using the identifier returned when lodging. You can only fetch notices created using your company’s reporting party identifier.",
        "security": [
          {
            "ClientCredentials": [
              "ce:mn:r"
            ]
          },
          {
            "AuthorizerScheme": [
              "ce:mn:r"
            ]
          }
        ]
      },
      "put": {
        "tags": [
          "AirManifest"
        ],
        "parameters": [
          {
            "name": "id",
            "description": "",
            "schema": {
              "type": "string"
            },
            "in": "path",
            "required": true
          },
          {
            "$ref": "#/components/parameters/correlationIdHeader"
          },
          {
            "$ref": "#/components/parameters/requestIdHeader"
          },
          {
            "$ref": "#/components/parameters/transactionIdHeader"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AirManifest"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "409": {
            "$ref": "#/components/responses/409"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        },
        "summary": "Replace an AirManifest",
        "operationId": "replaceAirManifestById",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AirManifest"
              }
            }
          }
        },
        "description": "If required, you can replace a submitted manifest using the ID returned when performing the initial lodgement. Only the reporter who lodged the notice can make subsequent changes to it. Replacement requests require full data replacement. \n",
        "security": [
          {
            "ClientCredentials": [
              "ce:mn:u"
            ]
          },
          {
            "AuthorizerScheme": [
              "ce:mn:u"
            ]
          }
        ]
      },
      "delete": {
        "tags": [
          "AirManifest"
        ],
        "parameters": [
          {
            "name": "id",
            "description": "",
            "schema": {
              "type": "string"
            },
            "in": "path",
            "required": true
          },
          {
            "$ref": "#/components/parameters/correlationIdHeader"
          },
          {
            "$ref": "#/components/parameters/requestIdHeader"
          },
          {
            "$ref": "#/components/parameters/transactionIdHeader"
          }
        ],
        "responses": {
          "204": {
            "description": "OK"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "409": {
            "$ref": "#/components/responses/409"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        },
        "summary": "Delete an AirManifest",
        "operationId": "deleteAirManifestById",
        "description": "If required, you can withraw a submitted manifest using the ID returned when performing the initial lodgement. Only users with appropriate access will be able to perform this request.",
        "security": [
          {
            "ClientCredentials": [
              "ce:mn:d"
            ]
          },
          {
            "AuthorizerScheme": [
              "ce:mn:d"
            ]
          }
        ]
      },
      "patch": {
        "tags": [
          "AirManifest"
        ],
        "parameters": [
          {
            "name": "id",
            "description": "",
            "schema": {
              "type": "string"
            },
            "in": "path",
            "required": true
          },
          {
            "$ref": "#/components/parameters/correlationIdHeader"
          },
          {
            "$ref": "#/components/parameters/requestIdHeader"
          },
          {
            "$ref": "#/components/parameters/transactionIdHeader"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AirManifest"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "409": {
            "$ref": "#/components/responses/409"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        },
        "summary": "Update an AirManifest",
        "operationId": "updateAirManifestById",
        "description": "Users with the appropriate access to amend the details of a main manifest in the Integrated Cargo System (ICS). Significant amendments, particularly those involving goods subject to a permit may be subject to further investigation.\n\nBy requesting to update a submitted manifest, you can update the manifest header details without having to include the consignment data.",
        "security": [
          {
            "ClientCredentials": [
              "ce:mn:u"
            ]
          },
          {
            "AuthorizerScheme": [
              "ce:mn:u"
            ]
          }
        ]
      }
    },
    "/air-manifest/{id}/consignments": {
      "post": {
        "tags": [
          "AirManifest"
        ],
        "parameters": [
          {
            "name": "id",
            "description": "",
            "schema": {
              "type": "string"
            },
            "in": "path",
            "required": true
          },
          {
            "$ref": "#/components/parameters/correlationIdHeader"
          },
          {
            "$ref": "#/components/parameters/requestIdHeader"
          },
          {
            "$ref": "#/components/parameters/transactionIdHeader"
          }
        ],
        "responses": {
          "201": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Consignment"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "409": {
            "$ref": "#/components/responses/409"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        },
        "summary": "Create a new AirManifest Consignment",
        "operationId": "createAirManifestConsignment",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Consignment"
              }
            }
          }
        },
        "description": "Consignments can be added to a submitted manifest if required.",
        "security": [
          {
            "ClientCredentials": [
              "ce:mn:c",
              "ce:co:c"
            ]
          },
          {
            "AuthorizerScheme": [
              "ce:mn:c",
              "ce:co:c"
            ]
          }
        ]
      }
    },
    "/air-manifest/{id}/consignments/{billNumber}": {
      "get": {
        "tags": [
          "AirManifest"
        ],
        "parameters": [
          {
            "name": "id",
            "description": "",
            "schema": {
              "type": "string"
            },
            "in": "path",
            "required": true
          },
          {
            "name": "billNumber",
            "description": "",
            "schema": {
              "type": "string"
            },
            "in": "path",
            "required": true
          },
          {
            "$ref": "#/components/parameters/correlationIdHeader"
          },
          {
            "$ref": "#/components/parameters/requestIdHeader"
          },
          {
            "$ref": "#/components/parameters/transactionIdHeader"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Consignment"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "409": {
            "$ref": "#/components/responses/409"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        },
        "summary": "Get an AirManifest Consignment",
        "operationId": "getAirManifestConsignmentById",
        "description": "It is possible to fetch a specific consignment of a manifest notice that has previously been lodged, by performing a GET request using the consignment bill number. You can only fetch notices created using your company’s reporting party identifier.",
        "security": [
          {
            "AuthorizerScheme": [
              "ce:mn:r",
              "ce:co:r"
            ]
          }
        ]
      },
      "put": {
        "tags": [
          "AirManifest"
        ],
        "parameters": [
          {
            "name": "id",
            "description": "",
            "schema": {
              "type": "string"
            },
            "in": "path",
            "required": true
          },
          {
            "name": "billNumber",
            "description": "",
            "schema": {
              "type": "string"
            },
            "in": "path",
            "required": true
          },
          {
            "$ref": "#/components/parameters/correlationIdHeader"
          },
          {
            "$ref": "#/components/parameters/requestIdHeader"
          },
          {
            "$ref": "#/components/parameters/transactionIdHeader"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Consignment"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "409": {
            "$ref": "#/components/responses/409"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        },
        "summary": "Replace an AirManifest Consignment",
        "operationId": "replaceAirManifestConsignmentById",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Consignment"
              }
            }
          }
        },
        "description": "It is possible to replace a specific consignment of a manifest notice that has previously been lodged, by performing a PUT request using the consignment bill number. You can only fetch notices created using your company’s reporting party identifier.",
        "security": [
          {
            "ClientCredentials": [
              "ce:mn:u",
              "ce:co:u"
            ]
          },
          {
            "AuthorizerScheme": [
              "ce:mn:u",
              "ce:co:u"
            ]
          }
        ]
      },
      "delete": {
        "tags": [
          "AirManifest"
        ],
        "parameters": [
          {
            "name": "id",
            "description": "",
            "schema": {
              "type": "string"
            },
            "in": "path",
            "required": true
          },
          {
            "name": "billNumber",
            "description": "",
            "schema": {
              "type": "string"
            },
            "in": "path",
            "required": true
          },
          {
            "$ref": "#/components/parameters/correlationIdHeader"
          },
          {
            "$ref": "#/components/parameters/requestIdHeader"
          },
          {
            "$ref": "#/components/parameters/transactionIdHeader"
          }
        ],
        "responses": {
          "204": {
            "description": "OK"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "409": {
            "$ref": "#/components/responses/409"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        },
        "summary": "Delete an AirManifest Consignment",
        "operationId": "deleteAirManifestConsignmentById",
        "description": "It is possible to delete a specific consignment of a manifest notice that has previously been lodged, by performing a DELETE request using the consignment bill number. You can only fetch notices created using your company’s reporting party identifier.",
        "security": [
          {
            "ClientCredentials": [
              "ce:mn:d"
            ]
          },
          {
            "AuthorizerScheme": [
              "ce:mn:d",
              "ce:co:d"
            ]
          }
        ]
      }
    },
    "/sea-manifest": {
      "post": {
        "tags": [
          "SeaManifest"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/correlationIdHeader"
          },
          {
            "$ref": "#/components/parameters/requestIdHeader"
          },
          {
            "$ref": "#/components/parameters/transactionIdHeader"
          }
        ],
        "responses": {
          "201": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SeaManifest"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "409": {
            "$ref": "#/components/responses/409"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        },
        "summary": "Create a new SeaManifest",
        "operationId": "createSeaManifest",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SeaManifest"
              }
            }
          }
        },
        "description": "A manifest, sometimes called a main manifest, is required for every vessel that departs from a port in Australia. The manifest must be lodged with Customs not later than three days (excluding Sundays and public holidays) after the day of departure of the ship.\n\nThe manifest lists all cargo loaded on board the vessel.",
        "security": [
          {
            "ClientCredentials": [
              "ce:mn:c"
            ]
          },
          {
            "AuthorizerScheme": [
              "ce:mn:c"
            ]
          }
        ]
      }
    },
    "/sea-manifest/{id}": {
      "get": {
        "tags": [
          "SeaManifest"
        ],
        "parameters": [
          {
            "name": "id",
            "description": "",
            "schema": {
              "type": "string"
            },
            "in": "path",
            "required": true
          },
          {
            "$ref": "#/components/parameters/correlationIdHeader"
          },
          {
            "$ref": "#/components/parameters/requestIdHeader"
          },
          {
            "$ref": "#/components/parameters/transactionIdHeader"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SeaManifest"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "409": {
            "$ref": "#/components/responses/409"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        },
        "summary": "Get a SeaManifest",
        "operationId": "getSeaManifestById",
        "description": "It is possible to fetch a manifest notice that has previously been lodged, by performing a GET request using the identifier returned when lodging. You can only fetch notices created using your company’s reporting party identifier.",
        "security": [
          {
            "ClientCredentials": [
              "ce:mn:r"
            ]
          },
          {
            "AuthorizerScheme": [
              "ce:mn:r"
            ]
          }
        ]
      },
      "put": {
        "tags": [
          "SeaManifest"
        ],
        "parameters": [
          {
            "name": "id",
            "description": "",
            "schema": {
              "type": "string"
            },
            "in": "path",
            "required": true
          },
          {
            "$ref": "#/components/parameters/correlationIdHeader"
          },
          {
            "$ref": "#/components/parameters/requestIdHeader"
          },
          {
            "$ref": "#/components/parameters/transactionIdHeader"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SeaManifest"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "409": {
            "$ref": "#/components/responses/409"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        },
        "summary": "Replace a SeaManifest",
        "operationId": "replaceSeaManifestById",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SeaManifest"
              }
            }
          }
        },
        "description": "If required, you can replace a submitted manifest using the ID returned when performing the initial lodgement. Only the reporter who lodged the notice can make subsequent changes to it. Replacement requests require full data replacement. ",
        "security": [
          {
            "ClientCredentials": [
              "ce:mn:u"
            ]
          },
          {
            "AuthorizerScheme": [
              "ce:mn:u"
            ]
          }
        ]
      },
      "delete": {
        "tags": [
          "SeaManifest"
        ],
        "parameters": [
          {
            "name": "id",
            "description": "",
            "schema": {
              "type": "string"
            },
            "in": "path",
            "required": true
          },
          {
            "$ref": "#/components/parameters/correlationIdHeader"
          },
          {
            "$ref": "#/components/parameters/requestIdHeader"
          },
          {
            "$ref": "#/components/parameters/transactionIdHeader"
          }
        ],
        "responses": {
          "204": {
            "description": "OK"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "409": {
            "$ref": "#/components/responses/409"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        },
        "summary": "Delete a SeaManifest",
        "operationId": "deleteSeaManifestById",
        "description": "If required, you can withraw a submitted manifest using the ID returned when performing the initial lodgement. Only users with appropriate access will be able to perform this request.",
        "security": [
          {
            "ClientCredentials": [
              "ce:mn:d"
            ]
          },
          {
            "AuthorizerScheme": [
              "ce:mn:d"
            ]
          }
        ]
      },
      "patch": {
        "tags": [
          "SeaManifest"
        ],
        "parameters": [
          {
            "name": "id",
            "description": "",
            "schema": {
              "type": "string"
            },
            "in": "path",
            "required": true
          },
          {
            "$ref": "#/components/parameters/correlationIdHeader"
          },
          {
            "$ref": "#/components/parameters/requestIdHeader"
          },
          {
            "$ref": "#/components/parameters/transactionIdHeader"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SeaManifest"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "409": {
            "$ref": "#/components/responses/409"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        },
        "summary": "Update a SeaManifest",
        "operationId": "updateSeaManifestById",
        "description": "Users with the appropriate access to amend the details of a main manifest in the Integrated Cargo System (ICS). Significant amendments, particularly those involving goods subject to a permit may be subject to further investigation.\n\nBy requesting to update a submitted manifest, you can update the manifest header details without having to include the consignment data.\n",
        "security": [
          {
            "ClientCredentials": [
              "ce:mn:u"
            ]
          },
          {
            "AuthorizerScheme": [
              "ce:mn:u"
            ]
          }
        ]
      }
    },
    "/sea-manifest/{id}/consignments": {
      "post": {
        "tags": [
          "SeaManifest"
        ],
        "parameters": [
          {
            "name": "id",
            "description": "",
            "schema": {
              "type": "string"
            },
            "in": "path",
            "required": true
          },
          {
            "$ref": "#/components/parameters/correlationIdHeader"
          },
          {
            "$ref": "#/components/parameters/requestIdHeader"
          },
          {
            "$ref": "#/components/parameters/transactionIdHeader"
          }
        ],
        "responses": {
          "201": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Consignment"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "409": {
            "$ref": "#/components/responses/409"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        },
        "summary": "Create a new SeaManifest Consignment",
        "operationId": "createSeaManifestConsignment",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Consignment"
              }
            }
          }
        },
        "description": "Consignments can be added to a submitted manifest if required.\n",
        "security": [
          {
            "ClientCredentials": [
              "ce:mn:c"
            ]
          },
          {
            "AuthorizerScheme": [
              "ce:mn:c",
              "ce:co:c"
            ]
          }
        ]
      }
    },
    "/sea-manifest/{id}/consignments/{billNumber}": {
      "get": {
        "tags": [
          "SeaManifest"
        ],
        "parameters": [
          {
            "name": "id",
            "description": "",
            "schema": {
              "type": "string"
            },
            "in": "path",
            "required": true
          },
          {
            "name": "billNumber",
            "description": "",
            "schema": {
              "type": "string"
            },
            "in": "path",
            "required": true
          },
          {
            "$ref": "#/components/parameters/correlationIdHeader"
          },
          {
            "$ref": "#/components/parameters/requestIdHeader"
          },
          {
            "$ref": "#/components/parameters/transactionIdHeader"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Consignment"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "409": {
            "$ref": "#/components/responses/409"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        },
        "summary": "Get a SeaManifest Consignment",
        "operationId": "getSeaManifestConsignmentById",
        "description": "It is possible to fetch a specific consignment of a manifest notice that has previously been lodged, by performing a GET request using the consignment bill number. You can only fetch notices created using your company’s reporting party identifier.",
        "security": [
          {
            "ClientCredentials": [
              "ce:mn:r"
            ]
          },
          {
            "AuthorizerScheme": [
              "ce:mn:r",
              "ce:co:r"
            ]
          }
        ]
      },
      "put": {
        "tags": [
          "SeaManifest"
        ],
        "parameters": [
          {
            "name": "id",
            "description": "",
            "schema": {
              "type": "string"
            },
            "in": "path",
            "required": true
          },
          {
            "name": "billNumber",
            "description": "",
            "schema": {
              "type": "string"
            },
            "in": "path",
            "required": true
          },
          {
            "$ref": "#/components/parameters/correlationIdHeader"
          },
          {
            "$ref": "#/components/parameters/requestIdHeader"
          },
          {
            "$ref": "#/components/parameters/transactionIdHeader"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Consignment"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "409": {
            "$ref": "#/components/responses/409"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        },
        "summary": "Replace a SeaManifest Consignment",
        "operationId": "replaceSeaManifestConsignmentById",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Consignment"
              }
            }
          }
        },
        "description": "It is possible to replace a specific consignment of a manifest notice that has previously been lodged, by performing a PUT request using the consignment bill number. You can only fetch notices created using your company’s reporting party identifier.\n",
        "security": [
          {
            "ClientCredentials": [
              "ce:mn:u",
              "ce:co:u"
            ]
          },
          {
            "AuthorizerScheme": [
              "ce:mn:u",
              "ce:co:u"
            ]
          }
        ]
      },
      "delete": {
        "tags": [
          "SeaManifest"
        ],
        "parameters": [
          {
            "name": "id",
            "description": "",
            "schema": {
              "type": "string"
            },
            "in": "path",
            "required": true
          },
          {
            "name": "billNumber",
            "description": "",
            "schema": {
              "type": "string"
            },
            "in": "path",
            "required": true
          },
          {
            "$ref": "#/components/parameters/correlationIdHeader"
          },
          {
            "$ref": "#/components/parameters/requestIdHeader"
          },
          {
            "$ref": "#/components/parameters/transactionIdHeader"
          }
        ],
        "responses": {
          "204": {
            "description": "OK"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "409": {
            "$ref": "#/components/responses/409"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        },
        "summary": "Delete a SeaManifest Consignment",
        "operationId": "deleteSeaManifestConsignmentById",
        "description": "It is possible to delete a specific consignment of a manifest notice that has previously been lodged, by performing a DELETE request using the consignment bill number. You can only fetch notices created using your company’s reporting party identifier.",
        "security": [
          {
            "ClientCredentials": [
              "ce:mn:d"
            ]
          },
          {
            "AuthorizerScheme": [
              "ce:mn:d",
              "ce:co:d"
            ]
          }
        ]
      }
    },
    "/terminal-withdrawal": {
      "post": {
        "tags": [
          "TerminalWithdrawal"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/correlationIdHeader"
          },
          {
            "$ref": "#/components/parameters/requestIdHeader"
          },
          {
            "$ref": "#/components/parameters/transactionIdHeader"
          }
        ],
        "responses": {
          "201": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TerminalWithdrawal"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "409": {
            "$ref": "#/components/responses/409"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        },
        "summary": "Create a new TerminalWithdrawal",
        "operationId": "createTerminalWithdrawal",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TerminalWithdrawal"
              }
            }
          }
        },
        "description": "Some description of the operation.\n\n***You can use keep using `markdown` here to write out your description in more detail.***\n",
        "security": [
          {
            "ClientCredentials": [
              "ce:tm:c"
            ]
          },
          {
            "AuthorizerScheme": [
              "ce:tm:c"
            ]
          }
        ]
      }
    },
    "/terminal-withdrawal/{id}": {
      "get": {
        "tags": [
          "TerminalWithdrawal"
        ],
        "parameters": [
          {
            "name": "id",
            "description": "",
            "schema": {
              "type": "string"
            },
            "in": "path",
            "required": true
          },
          {
            "$ref": "#/components/parameters/correlationIdHeader"
          },
          {
            "$ref": "#/components/parameters/requestIdHeader"
          },
          {
            "$ref": "#/components/parameters/transactionIdHeader"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TerminalWithdrawal"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "409": {
            "$ref": "#/components/responses/409"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        },
        "summary": "Get a TerminalWithdrawal",
        "operationId": "getTerminalWithdrawalById",
        "description": "It is possible to fetch a Terminal Withdrawal notice that has previously been lodged, by performing a GET request using the identifier returned when lodging. You can only fetch notices created using your company’s reporting party identifier.",
        "security": [
          {
            "ClientCredentials": [
              "ce:tm:r"
            ]
          },
          {
            "AuthorizerScheme": [
              "ce:tm:r"
            ]
          }
        ]
      },
      "put": {
        "tags": [
          "TerminalWithdrawal"
        ],
        "parameters": [
          {
            "name": "id",
            "description": "",
            "schema": {
              "type": "string"
            },
            "in": "path",
            "required": true
          },
          {
            "$ref": "#/components/parameters/correlationIdHeader"
          },
          {
            "$ref": "#/components/parameters/requestIdHeader"
          },
          {
            "$ref": "#/components/parameters/transactionIdHeader"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TerminalWithdrawal"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "409": {
            "$ref": "#/components/responses/409"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        },
        "summary": "Replace a TerminalWithdrawal",
        "operationId": "replaceTerminalWithdrawalById",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TerminalWithdrawal"
              }
            }
          }
        },
        "description": "If required, you can replace a submitted Terminal Withdrawal using the ID returned when performing the initial lodgement. Only the reporter who lodged the notice can make subsequent changes to it. Replacement requests require full data replacement. \n",
        "security": [
          {
            "ClientCredentials": [
              "ce:tm:u"
            ]
          },
          {
            "AuthorizerScheme": [
              "ce:tm:u"
            ]
          }
        ]
      },
      "delete": {
        "tags": [
          "TerminalWithdrawal"
        ],
        "parameters": [
          {
            "name": "id",
            "description": "",
            "schema": {
              "type": "string"
            },
            "in": "path",
            "required": true
          },
          {
            "$ref": "#/components/parameters/correlationIdHeader"
          },
          {
            "$ref": "#/components/parameters/requestIdHeader"
          },
          {
            "$ref": "#/components/parameters/transactionIdHeader"
          }
        ],
        "responses": {
          "204": {
            "description": "OK"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "409": {
            "$ref": "#/components/responses/409"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        },
        "summary": "Delete a TerminalWithdrawal",
        "operationId": "deleteTerminalWithdrawalById",
        "description": "If required, you can withraw a submitted CTO Withdrawal using the ID returned when performing the initial lodgement. Only users with appropriate access will be able to perform this request.",
        "security": [
          {
            "ClientCredentials": [
              "ce:tm:d"
            ]
          },
          {
            "AuthorizerScheme": [
              "ce:tm:d"
            ]
          }
        ]
      },
      "patch": {
        "tags": [
          "TerminalWithdrawal"
        ],
        "parameters": [
          {
            "name": "id",
            "description": "",
            "schema": {
              "type": "string"
            },
            "in": "path",
            "required": true
          },
          {
            "$ref": "#/components/parameters/correlationIdHeader"
          },
          {
            "$ref": "#/components/parameters/requestIdHeader"
          },
          {
            "$ref": "#/components/parameters/transactionIdHeader"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TerminalWithdrawal"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "409": {
            "$ref": "#/components/responses/409"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        },
        "summary": "Update a TerminalWithdrawal",
        "operationId": "updateTerminalWithdrawalById",
        "description": "If required, you can make amendments to a submitted terminal withdrawal using the ID returned when performing the initial lodgement. Only the reporter who lodged the notice can make subsequent changes to it. Significant amendments, particularly those involving goods subject to a permit may be subject to further investigation.\n\nBy requesting to update a submitted terminal withdrawal, you can update the header detail without having to include the consignment data.",
        "security": [
          {
            "ClientCredentials": [
              "ce:tm:u"
            ]
          },
          {
            "AuthorizerScheme": [
              "ce:tm:u"
            ]
          }
        ]
      }
    },
    "/terminal-withdrawal/{id}/consignments": {
      "post": {
        "tags": [
          "TerminalWithdrawal"
        ],
        "parameters": [
          {
            "name": "id",
            "description": "",
            "schema": {
              "type": "string"
            },
            "in": "path",
            "required": true
          },
          {
            "$ref": "#/components/parameters/correlationIdHeader"
          },
          {
            "$ref": "#/components/parameters/requestIdHeader"
          },
          {
            "$ref": "#/components/parameters/transactionIdHeader"
          }
        ],
        "responses": {
          "201": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Consignment"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "409": {
            "$ref": "#/components/responses/409"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        },
        "summary": "Create a new TerminalWithdrawal Consignment",
        "operationId": "createTerminalWithdrawalConsignment",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Consignment"
              }
            }
          }
        },
        "description": "Consignments can be added to a submitted terminal withdrawal if required.",
        "security": [
          {
            "ClientCredentials": [
              "ce:tm:c"
            ]
          },
          {
            "AuthorizerScheme": [
              "ce:tm:c",
              "ce:co:c"
            ]
          }
        ]
      }
    },
    "/terminal-withdrawal/{id}/consignments/{billNumber}": {
      "get": {
        "tags": [
          "TerminalWithdrawal"
        ],
        "parameters": [
          {
            "name": "id",
            "description": "",
            "schema": {
              "type": "string"
            },
            "in": "path",
            "required": true
          },
          {
            "name": "billNumber",
            "description": "",
            "schema": {
              "type": "string"
            },
            "in": "path",
            "required": true
          },
          {
            "$ref": "#/components/parameters/correlationIdHeader"
          },
          {
            "$ref": "#/components/parameters/requestIdHeader"
          },
          {
            "$ref": "#/components/parameters/transactionIdHeader"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Consignment"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "409": {
            "$ref": "#/components/responses/409"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        },
        "summary": "Get a TerminalWithdrawal Consignment",
        "operationId": "getTerminalWithdrawalConsignmentById",
        "description": "It is possible to fetch a specific consignment of a terminal withdrawal notice that has previously been lodged, by performing a GET request using the consignment bill number. You can only fetch notices created using your company’s reporting party identifier.",
        "security": [
          {
            "ClientCredentials": [
              "ce:tm:r"
            ]
          },
          {
            "AuthorizerScheme": [
              "ce:tm:r",
              "ce:co:r"
            ]
          }
        ]
      },
      "put": {
        "tags": [
          "TerminalWithdrawal"
        ],
        "parameters": [
          {
            "name": "id",
            "description": "",
            "schema": {
              "type": "string"
            },
            "in": "path",
            "required": true
          },
          {
            "name": "billNumber",
            "description": "",
            "schema": {
              "type": "string"
            },
            "in": "path",
            "required": true
          },
          {
            "$ref": "#/components/parameters/correlationIdHeader"
          },
          {
            "$ref": "#/components/parameters/requestIdHeader"
          },
          {
            "$ref": "#/components/parameters/transactionIdHeader"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Consignment"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "409": {
            "$ref": "#/components/responses/409"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        },
        "summary": "Replace a TerminalWithdrawal Consignment",
        "operationId": "replaceTerminalWithdrawalConsignmentById",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Consignment"
              }
            }
          }
        },
        "description": "It is possible to replace a specific consignment of a terminal withdrawal notice that has previously been lodged, by performing a PUT request using the consignment bill number. You can only fetch notices created using your company’s reporting party identifier.",
        "security": [
          {
            "ClientCredentials": [
              "ce:tm:u",
              "ce:co:u"
            ]
          },
          {
            "AuthorizerScheme": [
              "ce:tm:u",
              "ce:co:u"
            ]
          }
        ]
      },
      "delete": {
        "tags": [
          "TerminalWithdrawal"
        ],
        "parameters": [
          {
            "name": "id",
            "description": "",
            "schema": {
              "type": "string"
            },
            "in": "path",
            "required": true
          },
          {
            "name": "billNumber",
            "description": "",
            "schema": {
              "type": "string"
            },
            "in": "path",
            "required": true
          },
          {
            "$ref": "#/components/parameters/correlationIdHeader"
          },
          {
            "$ref": "#/components/parameters/requestIdHeader"
          },
          {
            "$ref": "#/components/parameters/transactionIdHeader"
          }
        ],
        "responses": {
          "204": {
            "description": "OK"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "409": {
            "$ref": "#/components/responses/409"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        },
        "summary": "Delete a TerminalWithdrawal Consignment",
        "operationId": "deleteTerminalWithdrawalConsignmentById",
        "description": "It is possible to delete a specific consignment of a terminal withdrawal notice that has previously been lodged, by performing a DELETE request using the consignment bill number. You can only fetch notices created using your company’s reporting party identifier.",
        "security": [
          {
            "ClientCredentials": [
              "ce:tm:d"
            ]
          },
          {
            "AuthorizerScheme": [
              "ce:tm:d",
              "ce:co:d"
            ]
          }
        ]
      }
    },
    "/abn/events/subscriptions": {
      "post": {
        "tags": [
          "Subscription"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/correlationIdHeader"
          },
          {
            "$ref": "#/components/parameters/requestIdHeader"
          },
          {
            "$ref": "#/components/parameters/transactionIdHeader"
          }
        ],
        "responses": {
          "201": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Subscription"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "409": {
            "$ref": "#/components/responses/409"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        },
        "summary": "Create a new Subscription",
        "operationId": "createABNSubscription",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Subscription"
              }
            }
          }
        },
        "description": "Some description of the operation.\n\n***You can use keep using `markdown` here to write out your description in more detail.***\n"
      }
    },
    "/events/subscriptions": {
      "post": {
        "tags": [
          "Subscription"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/correlationIdHeader"
          },
          {
            "$ref": "#/components/parameters/requestIdHeader"
          },
          {
            "$ref": "#/components/parameters/transactionIdHeader"
          }
        ],
        "responses": {
          "201": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Subscription"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "409": {
            "$ref": "#/components/responses/409"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        },
        "summary": "Create a new Subscription",
        "operationId": "createSubscription",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Subscription"
              }
            }
          }
        },
        "description": "Some description of the operation.\n\n***You can use keep using `markdown` here to write out your description in more detail.***\n"
      }
    },
    "/consolidations": {
      "post": {
        "tags": [
          "Consolidation"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/correlationIdHeader"
          },
          {
            "$ref": "#/components/parameters/requestIdHeader"
          },
          {
            "$ref": "#/components/parameters/transactionIdHeader"
          }
        ],
        "responses": {
          "201": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Consolidation"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "409": {
            "$ref": "#/components/responses/409"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        },
        "summary": "Create a new Consolidation",
        "operationId": "createConsolidation",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Consolidation"
              }
            }
          }
        },
        "description": "Generally, goods intended for export must be entered for exportation, and will be assigned a Customs Authority Number (CAN) when an authority to deal with the goods is given.\nIf export goods are consolidated before export with other export goods, the consolidator must prepare and communicate a consolidation, sometimes called a submanifest, to Customs.\nCustoms will assign the submanifest a consolidation reference number (CRN), which is the CAN for the consolidation.",
        "security": [
          {
            "ClientCredentials": [
              "ce:cs:c"
            ]
          },
          {
            "AuthorizerScheme": [
              "ce:cs:c"
            ]
          }
        ]
      }
    },
    "/consolidations/{id}": {
      "get": {
        "tags": [
          "Consolidation"
        ],
        "parameters": [
          {
            "name": "id",
            "description": "",
            "schema": {
              "type": "string"
            },
            "in": "path",
            "required": true
          },
          {
            "$ref": "#/components/parameters/correlationIdHeader"
          },
          {
            "$ref": "#/components/parameters/requestIdHeader"
          },
          {
            "$ref": "#/components/parameters/transactionIdHeader"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Consolidation"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "409": {
            "$ref": "#/components/responses/409"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        },
        "summary": "Get a Consolidation",
        "operationId": "getConsolidationById",
        "description": "It is possible to fetch a consolidation notice that has previously been lodged, by performing a GET request using the identifier returned when lodging. You can only fetch notices created using your company’s reporting party identifier.\n",
        "security": [
          {
            "ClientCredentials": [
              "ce:cs:r"
            ]
          },
          {
            "AuthorizerScheme": [
              "ce:cs:r"
            ]
          }
        ]
      },
      "put": {
        "tags": [
          "Consolidation"
        ],
        "parameters": [
          {
            "name": "id",
            "description": "",
            "schema": {
              "type": "string"
            },
            "in": "path",
            "required": true
          },
          {
            "$ref": "#/components/parameters/correlationIdHeader"
          },
          {
            "$ref": "#/components/parameters/requestIdHeader"
          },
          {
            "$ref": "#/components/parameters/transactionIdHeader"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Consolidation"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "409": {
            "$ref": "#/components/responses/409"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        },
        "summary": "Replace a Consolidation",
        "operationId": "replaceConsolidationById",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Consolidation"
              }
            }
          }
        },
        "description": "If required, you can replace a submitted consolidation using the ID returned when performing the initial lodgement. Only the reporter who lodged the notice can make subsequent changes to it. Replacement requests require full data replacement. \n",
        "security": [
          {
            "ClientCredentials": [
              "ce:cs:u"
            ]
          },
          {
            "AuthorizerScheme": [
              "ce:cs:u"
            ]
          }
        ]
      },
      "delete": {
        "tags": [
          "Consolidation"
        ],
        "parameters": [
          {
            "name": "id",
            "description": "",
            "schema": {
              "type": "string"
            },
            "in": "path",
            "required": true
          },
          {
            "$ref": "#/components/parameters/correlationIdHeader"
          },
          {
            "$ref": "#/components/parameters/requestIdHeader"
          },
          {
            "$ref": "#/components/parameters/transactionIdHeader"
          }
        ],
        "responses": {
          "204": {
            "description": "OK"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "409": {
            "$ref": "#/components/responses/409"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        },
        "summary": "Delete a Consolidation",
        "operationId": "deleteConsolidationById",
        "description": "If required, you can withraw a submitted consolidation using the ID returned when performing the initial lodgement. Only users with appropriate access will be able to perform this request.",
        "security": [
          {
            "ClientCredentials": [
              "ce:cs:d"
            ]
          },
          {
            "AuthorizerScheme": [
              "ce:cs:d"
            ]
          }
        ]
      },
      "patch": {
        "tags": [
          "Consolidation"
        ],
        "parameters": [
          {
            "name": "id",
            "description": "",
            "schema": {
              "type": "string"
            },
            "in": "path",
            "required": true
          },
          {
            "$ref": "#/components/parameters/correlationIdHeader"
          },
          {
            "$ref": "#/components/parameters/requestIdHeader"
          },
          {
            "$ref": "#/components/parameters/transactionIdHeader"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Consolidation"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "409": {
            "$ref": "#/components/responses/409"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        },
        "summary": "Update a Consolidation",
        "operationId": "updateConsolidationById",
        "description": "If required, you can make amendments to a submitted consolidation using the ID returned when performing the initial lodgement. Only the reporter who lodged the notice can make subsequent changes to it. Significant amendments, particularly those involving goods subject to a permit may be subject to further investigation.\n\nBy requesting to update a submitted consolidation, you can update the header detail without having to include the consignment data.",
        "security": [
          {
            "ClientCredentials": [
              "ce:cs:u"
            ]
          },
          {
            "AuthorizerScheme": [
              "ce:cs:u"
            ]
          }
        ]
      }
    },
    "/consolidations/{id}/consignments": {
      "post": {
        "tags": [
          "Consolidation"
        ],
        "parameters": [
          {
            "name": "id",
            "description": "",
            "schema": {
              "type": "string"
            },
            "in": "path",
            "required": true
          },
          {
            "$ref": "#/components/parameters/correlationIdHeader"
          },
          {
            "$ref": "#/components/parameters/requestIdHeader"
          },
          {
            "$ref": "#/components/parameters/transactionIdHeader"
          }
        ],
        "responses": {
          "201": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Consignment"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "409": {
            "$ref": "#/components/responses/409"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        },
        "summary": "Create a new Consolidation Consignment",
        "operationId": "createConsolidationConsignment",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Consignment"
              }
            }
          }
        },
        "description": "Consignments can be added to a submitted consolidation if required.",
        "security": [
          {
            "ClientCredentials": [
              "ce:cs:c"
            ]
          },
          {
            "AuthorizerScheme": [
              "ce:cs:c",
              "ce:co:c"
            ]
          }
        ]
      }
    },
    "/consolidations/{id}/consignments/{billNumber}": {
      "get": {
        "tags": [
          "Consolidation"
        ],
        "parameters": [
          {
            "name": "id",
            "description": "",
            "schema": {
              "type": "string"
            },
            "in": "path",
            "required": true
          },
          {
            "name": "billNumber",
            "description": "",
            "schema": {
              "type": "string"
            },
            "in": "path",
            "required": true
          },
          {
            "$ref": "#/components/parameters/correlationIdHeader"
          },
          {
            "$ref": "#/components/parameters/requestIdHeader"
          },
          {
            "$ref": "#/components/parameters/transactionIdHeader"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Consignment"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "409": {
            "$ref": "#/components/responses/409"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        },
        "summary": "Get a Consolidation Consignment",
        "operationId": "getConsolidationConsignmentById",
        "description": "It is possible to fetch a specific consignment of a consignment notice that has previously been lodged, by performing a GET request using the consignment bill number. You can only fetch notices created using your company’s reporting party identifier.",
        "security": [
          {
            "ClientCredentials": [
              "ce:cs:r"
            ]
          },
          {
            "AuthorizerScheme": [
              "ce:co:r"
            ]
          }
        ]
      },
      "put": {
        "tags": [
          "Consolidation"
        ],
        "parameters": [
          {
            "name": "id",
            "description": "",
            "schema": {
              "type": "string"
            },
            "in": "path",
            "required": true
          },
          {
            "name": "billNumber",
            "description": "",
            "schema": {
              "type": "string"
            },
            "in": "path",
            "required": true
          },
          {
            "$ref": "#/components/parameters/correlationIdHeader"
          },
          {
            "$ref": "#/components/parameters/requestIdHeader"
          },
          {
            "$ref": "#/components/parameters/transactionIdHeader"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Consignment"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "409": {
            "$ref": "#/components/responses/409"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        },
        "summary": "Replace a Consolidation Consignment",
        "operationId": "replaceConsolidationConsignmentById",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Consignment"
              }
            }
          }
        },
        "description": "It is possible to replace a specific consignment of a consolidation notice that has previously been lodged, by performing a PUT request using the consignment bill number. You can only fetch notices created using your company’s reporting party identifier.",
        "security": [
          {
            "ClientCredentials": [
              "ce:cs:u",
              "ce:co:u"
            ]
          },
          {
            "AuthorizerScheme": [
              "ce:co:u"
            ]
          }
        ]
      },
      "delete": {
        "tags": [
          "Consolidation"
        ],
        "parameters": [
          {
            "name": "id",
            "description": "",
            "schema": {
              "type": "string"
            },
            "in": "path",
            "required": true
          },
          {
            "name": "billNumber",
            "description": "",
            "schema": {
              "type": "string"
            },
            "in": "path",
            "required": true
          },
          {
            "$ref": "#/components/parameters/correlationIdHeader"
          },
          {
            "$ref": "#/components/parameters/requestIdHeader"
          },
          {
            "$ref": "#/components/parameters/transactionIdHeader"
          }
        ],
        "responses": {
          "204": {
            "description": "OK"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "409": {
            "$ref": "#/components/responses/409"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        },
        "summary": "Delete a Consolidation Consignment",
        "operationId": "deleteConsolidationConsignmentById",
        "description": "It is possible to delete a specific consignment of a consolidation notice that has previously been lodged, by performing a DELETE request using the consignment bill number. You can only fetch notices created using your company’s reporting party identifier.",
        "security": [
          {
            "ClientCredentials": [
              "ce:cs:d",
              "ce:co:d"
            ]
          },
          {
            "AuthorizerScheme": [
              "ce:cs:d",
              "ce:co:d"
            ]
          }
        ]
      }
    },
    "/consignments/{billNumber}": {
      "get": {
        "tags": [
          "Consignment"
        ],
        "parameters": [
          {
            "name": "billNumber",
            "description": "",
            "schema": {
              "type": "string"
            },
            "in": "path",
            "required": true
          },
          {
            "$ref": "#/components/parameters/correlationIdHeader"
          },
          {
            "$ref": "#/components/parameters/requestIdHeader"
          },
          {
            "$ref": "#/components/parameters/transactionIdHeader"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Consignment"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "409": {
            "$ref": "#/components/responses/409"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        },
        "summary": "Get a Consignment",
        "operationId": "getConsignmentById",
        "description": "Some description of the operation.\n\n***You can use keep using `markdown` here to write out your description in more detail.***\n",
        "security": [
          {
            "ClientCredentials": [
              "ce:co:s"
            ]
          },
          {
            "AuthorizerScheme": [
              "ce:co:s"
            ]
          }
        ]
      }
    },
    "/consignments": {
      "get": {
        "tags": [
          "Consignment"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/correlationIdHeader"
          },
          {
            "$ref": "#/components/parameters/requestIdHeader"
          },
          {
            "$ref": "#/components/parameters/transactionIdHeader"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Consignment"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "409": {
            "$ref": "#/components/responses/409"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        },
        "summary": "List Consignments",
        "operationId": "listConsignments",
        "description": "Some description of the operation.\n\n***You can use keep using `markdown` here to write out your description in more detail.***\n",
        "security": [
          {
            "ClientCredentials": [
              "ce:co:s"
            ]
          },
          {
            "AuthorizerScheme": [
              "ce:co:s"
            ]
          }
        ]
      }
    }
  },
  "components": {
    "schemas": {
      "TerminalReceival": {
        "type": "object",
        "properties": {
          "id": {
            "readOnly": true,
            "type": "string",
            "description": ""
          },
          "senderReference": {
            "maxLength": 35,
            "type": "string",
            "description": "The Senders Reference is a unique business-level reference number assigned by the document owner."
          },
          "reportingPartyId": {
            "maxLength": 11,
            "type": "string",
            "description": "Default value is the ABN/CCID (Australian Business Number/Customs Client Identifier) of the reporting party."
          },
          "establishmentId": {
            "maxLength": 5,
            "type": "string",
            "description": "The identifier issued by the Department to an approved/licensed premises for loading/unloading of goods under Customs control until clearance is issued."
          },
          "transportMode": {
            "type": "string",
            "enum": [
              "air",
              "Sea"
            ],
            "example": "air",
            "description": ""
          },
          "consignments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Consignment"
            },
            "description": "The list of consignment items in this consolidation - each identified by a house bill number."
          }
        }
      },
      "Consignment": {
        "type": "object",
        "properties": {
          "billNumber": {
            "type": "string",
            "description": "A unique identifier."
          },
          "customsAuthorityNumber": {
            "maxLength": 9,
            "minLength": 9,
            "type": "string",
            "description": "A Customs Authority Number (CAN) will be created by the Integrated Cargo System to identify various Export Documents. If these goods have had a contingency Customs authority number issued to them, enter the contingency CAN here instead.The CAN is 9 characters long with a format of AAAAAAAAZ where **A** represents the Sequence Character and Zrepresents the Check Digit Character.Note: a Contingency CAN can only be used if the Exempt Code is EXCC."
          },
          "exemptGoodsDeclaration": {
            "$ref": "#/components/schemas/ExemptGoods",
            "description": "An exempt goods declaration is required for any goods that have not already been delcared in an Export Declaration - for any of the reasons listed in the exemptionCode (usually for low value goods). "
          },
          "destinationCountryCode": {
            "type": "string",
            "enum": [
              "n/a"
            ],
            "example": "n/a",
            "description": "The UN country code for the country the cargo is going to be delivered to."
          },
          "packageCount": {
            "maxLength": 7,
            "type": "number",
            "description": "Number of packages that the goods are packed into, does not include packages packed into a container."
          },
          "containerCount": {
            "type": "number",
            "description": "Number of containers the goods are packed into."
          },
          "status": {
            "readOnly": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ConsignmentStatus"
            },
            "description": "Consignment status is a read-only structure that is returned by customs together with all API responses that include the Consignment object. The full status history is provided as an array of cargo status objects."
          }
        }
      },
      "ExemptGoods": {
        "type": "object",
        "properties": {
          "exemptionCode": {
            "type": "string",
            "enum": [
              "EXDD",
              "EXLV",
              "EXML",
              "EXPE",
              "EXSP",
              "EXTI",
              "EXCC",
              "EXDC"
            ],
            "example": "EXDD",
            "description": "The code that defines the basis for the goods being exempt from export declaration reporting (eg EXLV for low value goods). Allowed values are defined in the exemption code enumeration"
          },
          "goodsOwnerPartyId": {
            "maxLength": 11,
            "type": "string",
            "description": "The ABN or CCID of the owner of the goods."
          },
          "goodsDescription": {
            "maxLength": 128,
            "type": "string",
            "description": "A plain text description of the cargo."
          },
          "goodsOwnerName": {
            "maxLength": 35,
            "type": "string",
            "description": "If the owner does not have an ABN/CCID, enter the owner name."
          }
        }
      },
      "ConsignmentStatus": {
        "type": "object",
        "properties": {
          "statusCode": {
            "type": "string",
            "enum": [
              "consigned",
              "underbond",
              "released",
              "consolidated",
              "atPort",
              "loading",
              "exported"
            ],
            "example": "consigned",
            "description": "The status code of the export consignment.  Status values are defined by the cargoExport state lifecycle "
          },
          "statusDescription": {
            "type": "string",
            "description": "Full description of the corresponding status code."
          },
          "statusDate": {
            "type": "string",
            "format": "date-time",
            "description": "the date and time at which the status changed to this value."
          }
        }
      },
      "AirManifest": {
        "type": "object",
        "properties": {
          "id": {
            "readOnly": true,
            "type": "string",
            "description": ""
          },
          "senderReference": {
            "maxLength": 35,
            "type": "string",
            "description": "The Senders Reference is a unique business-level reference number assigned by the document owner."
          },
          "reportingPartyId": {
            "maxLength": 11,
            "type": "string",
            "description": "Default value is the ABN/CCID (Australian Business Number/Customs Client Identifier) of the reporting party."
          },
          "flight": {
            "$ref": "#/components/schemas/Flight",
            "description": ""
          },
          "manifestNumber": {
            "type": "string",
            "description": "An identifier issued by the Department to identify Export Main Manifests."
          },
          "movementDetails": {
            "$ref": "#/components/schemas/ActualDeparture",
            "description": ""
          },
          "consignments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Consignment"
            },
            "description": ""
          },
          "emptyContainerCount": {
            "type": "number",
            "description": ""
          }
        }
      },
      "Flight": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The unique transaction identifier for request."
          },
          "flightNumber": {
            "maxLength": 5,
            "type": "string",
            "description": "A unique reference assigned by a carrier to identify a specific journey of an aircraft."
          },
          "airlineCode": {
            "maxLength": 3,
            "type": "string",
            "description": "A common code (issued by IATA) that identifies an airline/carrier. e.g.. QF = Qantas."
          }
        },
        "required": [
          "flightNumber"
        ]
      },
      "ActualDeparture": {
        "type": "object",
        "properties": {
          "departurePortCode": {
            "maxLength": 5,
            "type": "string",
            "x-external-enumeration": "https://needlinktoreferencedata.com/list",
            "description": "The UNLOCODE of the port from which the goods covered by this departure report will leave/have left.\n\nThis is an enumerated value, but the list of valid values are too big, or change too often to include here. You can access the list of allowable values at this URL:  https://needlinktoreferencedata.com/list\n"
          },
          "departureEstablishmentId": {
            "type": "string",
            "description": ""
          },
          "actualDepartureDateTime": {
            "type": "string",
            "description": "The date, time, date time or other date time value of the actual departure related to this transport event."
          },
          "destinationCountryCode": {
            "type": "string",
            "description": ""
          },
          "destinationPortCode": {
            "maxLength": 5,
            "type": "string",
            "x-external-enumeration": "https://needlinktoreferencedata.com/list",
            "description": "The UNLOCODE of the next port of destination of the vessel or aircraft carrying the goods.\n\nThis is an enumerated value, but the list of valid values are too big, or change too often to include here. You can access the list of allowable values at this URL:  https://needlinktoreferencedata.com/list\n"
          }
        }
      },
      "SeaManifest": {
        "type": "object",
        "properties": {
          "id": {
            "readOnly": true,
            "type": "string",
            "description": ""
          },
          "senderReference": {
            "maxLength": 35,
            "type": "string",
            "description": "The Senders Reference is a unique business-level reference number assigned by the document owner."
          },
          "reportingPartyId": {
            "maxLength": 11,
            "type": "string",
            "description": "Default value is the ABN/CCID (Australian Business Number/Customs Client Identifier) of the reporting party."
          },
          "voyage": {
            "$ref": "#/components/schemas/Voyage",
            "description": ""
          },
          "manifestNumber": {
            "type": "string",
            "description": "An identifier issued by the Department to identify Export Main Manifests."
          },
          "movementDetails": {
            "$ref": "#/components/schemas/ActualDeparture",
            "description": ""
          },
          "consignments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Consignment"
            },
            "description": ""
          },
          "emptyContainerCount": {
            "type": "number",
            "description": ""
          }
        }
      },
      "Voyage": {
        "type": "object",
        "properties": {
          "id": {
            "readOnly": true,
            "type": "string",
            "description": "The unique transaction identifier for request."
          },
          "voyageNumber": {
            "maxLength": 6,
            "type": "string",
            "description": "This is the Voyage Number of the vessel used to transport goods moving Underbond by Sea."
          },
          "vesselRegistrationNumber": {
            "maxLength": 8,
            "type": "string",
            "description": "The identifier, either a Lloyds Number or a Customs Ship Number, of a vessel."
          },
          "carrierPartyId": {
            "maxLength": 11,
            "type": "string",
            "description": "A Party ID assigned by the Department to carriers of Export goods."
          }
        },
        "required": [
          "voyageNumber",
          "vesselRegistrationNumber",
          "carrierPartyId"
        ]
      },
      "TerminalWithdrawal": {
        "type": "object",
        "properties": {
          "id": {
            "readOnly": true,
            "type": "string",
            "description": ""
          },
          "senderReference": {
            "maxLength": 35,
            "type": "string",
            "description": "The Senders Reference is a unique business-level reference number assigned by the document owner."
          },
          "reportingPartyId": {
            "maxLength": 11,
            "type": "string",
            "description": "Default value is the ABN/CCID (Australian Business Number/Customs Client Identifier) of the reporting party."
          },
          "establishmentId": {
            "maxLength": 5,
            "type": "string",
            "description": "The identifier issued by the Department to an approved/licensed premises for loading/unloading of goods under Customs control until clearance is issued."
          },
          "transportMode": {
            "type": "string",
            "enum": [
              "air",
              "Sea"
            ],
            "example": "air",
            "description": ""
          },
          "consignments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Consignment"
            },
            "description": "The list of consignment items in this consolidation - each identified by a house bill number."
          }
        }
      },
      "Subscription": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The unique transaction identifier for request."
          },
          "hub": {
            "$ref": "#/components/schemas/Hub",
            "description": "The Hub for this subscription"
          }
        }
      },
      "Hub": {
        "type": "object",
        "properties": {
          "callback": {
            "type": "string",
            "description": "The URL at which a subscriber wishes to receive content distribution requests."
          },
          "mode": {
            "type": "string",
            "enum": [
              "subscribe",
              "unsubscribe"
            ],
            "example": "subscribe",
            "description": "The literal string \"subscribe\" or \"unsubscribe\", depending on the goal of the reques"
          },
          "topic": {
            "type": "string",
            "description": "The topic URL that the subscriber wishes to subscribe to or unsubscribe from. Note that this MUST be the \"self\" URL found during the discovery step, which may be different from the URL that was used to make the discovery request."
          },
          "lease_seconds": {
            "minimum": 0,
            "type": "integer",
            "description": "OPTIONAL. Number of seconds for which the subscriber would like to have the subscription active, given as a positive decimal integer. Hubs MAY choose to respect this value or not, depending on their own policies, and MAY set a default value if the subscriber omits the parameter. This parameter MAY be present for unsubscription requests and MUST be ignored by the hub in that case."
          },
          "secret": {
            "maxLength": 200,
            "type": "string",
            "description": "OPTIONAL. A subscriber-provided cryptographically random unique secret string that will be used to compute an HMAC digest for authorized content distribution. If not supplied, the HMAC digest will not be present for content distribution requests. This parameter SHOULD only be specified when the request was made over HTTPS [RFC2818]. This parameter MUST be less than 200 bytes in length."
          }
        },
        "required": [
          "callback"
        ]
      },
      "Consolidation": {
        "type": "object",
        "properties": {
          "id": {
            "readOnly": true,
            "type": "string",
            "description": ""
          },
          "senderReference": {
            "maxLength": 35,
            "type": "string",
            "description": "The Senders Reference is a unique business-level reference number assigned by the document owner."
          },
          "reportingPartyId": {
            "maxLength": 11,
            "type": "string",
            "description": "Default value is the ABN/CCID (Australian Business Number/Customs Client Identifier) of the reporting party."
          },
          "consolidationReferenceNumber": {
            "readOnly": true,
            "maxLength": 9,
            "minLength": 9,
            "type": "string",
            "description": "A Consolidation Reference Number (CRN) is the number assigned by Customs to a submanifest when the submanifest has been validated and processed by the ICS. The CRN remains unchanged even if the submanifest is subsequently amended, withdrawn or cancelled.The CRN is a Customs Authority Number (CAN), that is, a number that can be shown on other documents as a reference to the authority to deal with the goods listed on the submanifest. The CRN is not sufficient evidence that there is authority to deal with the consolidation, but is necessary evidence of authority to deal with an export consolidation.Like other CANs, the CRN is a string of nine alphanumeric characters."
          },
          "consignments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Consignment"
            },
            "description": ""
          },
          "totalPackageCount": {
            "maxLength": 7,
            "type": "number",
            "description": "The package count for the entire consolidation (ie all contained consignments)."
          },
          "totalContainerCount": {
            "type": "number",
            "description": "The total number of containers in the consolidation (submanifest)."
          },
          "emptyContainerCount": {
            "type": "number",
            "description": "Number of empty containers that this report contains. Only applicable to Sea Cargo."
          },
          "nilCargoReportIndicator": {
            "type": "boolean",
            "description": "Indicates whether any cargo is carried on the flight or the voyage of the vessel.Note: the Nil Cargo Indicator field cannot have a value of TRUE when consignments data exists."
          },
          "establishmentId": {
            "type": "string",
            "description": "The identifier issued by the Department to an approved/licensed premises for loading/unloading of goods under Customs control until clearance is issued."
          }
        }
      },
      "errorSource": {
        "description": "An object containing references to the source of an error.",
        "type": "object",
        "properties": {
          "pointer": {
            "description": "A JSON Pointer which describes which property in the request object to which an error\nmessage relates.\nFor more details on JSON pointers see [RFC6901](https://tools.ietf.org/html/rfc6901).",
            "type": "string"
          },
          "location": {
            "description": "Describes the location of the data to which the error message is related.\n\n- **\"REQUEST\"** - Indicates the message relates to a _property_ within the request\n  object. The `pointer` property should be populated in this case.\n- **\"QUERY\"** - Indicates the message relates to a _query_ parameter. The `parameter`\n  property should be populated in this case.\n- **\"ID\"** - Indicates the message relates to the identifier of the REST resource. The\n  `parameter` property _may optionally_ be populated in this case.",
            "type": "string",
            "enum": [
              "REQUEST",
              "QUERY",
              "ID"
            ]
          },
          "parameter": {
            "description": "A string indicating which URI query parameter caused the error.",
            "type": "string"
          }
        }
      },
      "error": {
        "description": "An object containing the details of a particular error.",
        "type": "object",
        "properties": {
          "id": {
            "description": "A unique identifier for the error occurrence, to provide traceability in application logs.",
            "type": "string"
          },
          "code": {
            "description": "A provider-specific or enterprise defined error code. Codes must be in uppercase.",
            "type": "string",
            "example": "ICS0003"
          },
          "detail": {
            "description": "A provider-specific or enterprise defined error message.",
            "type": "string"
          },
          "source": {
            "$ref": "#/components/schemas/errorSource"
          },
          "helpUrl": {
            "description": "A URL which leads to further details about the error (e.g. A help page).",
            "type": "string"
          },
          "helpText": {
            "description": "Help text which can provide further assistance on the error.",
            "type": "string"
          }
        },
        "required": [
          "code",
          "detail"
        ],
        "example": {
          "id": "123-4",
          "code": "ICS0003",
          "message": "The 'Airline Code' is not valid.",
          "source": {
            "pointer": "flights/departures/airlineCode",
            "helpLocation": "REQUEST"
          }
        }
      },
      "errorsArray": {
        "description": "A schema for the `errors` array.",
        "type": "object",
        "properties": {
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/error"
            }
          }
        }
      },
      "errorsResponseSchema": {
        "description": "The response returned when one or more errors have been encountered.",
        "type": "object",
        "required": [
          "errors"
        ],
        "allOf": [
          {
            "$ref": "#/components/schemas/errorsArray"
          }
        ]
      }
    },
    "responses": {
      "400": {
        "description": "The request could not be understood by the server due to malformed syntax.\nThe client **SHOULD NOT** repeat the request without modifications.",
        "headers": {
          "Request-ID": {
            "$ref": "#/components/headers/requestIdHeader"
          },
          "Correlation-ID": {
            "$ref": "#/components/headers/correlationIdHeader"
          },
          "x-protective-marking": {
            "$ref": "#/components/headers/xProtectiveMarkingHeader"
          }
        },
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/errorsResponseSchema"
            },
            "examples": {
              "badRequestError": {
                "$ref": "#/components/examples/badRequestErrorExample"
              }
            }
          }
        }
      },
      "401": {
        "description": "Client Error - Unauthorized.\nMissing or invalid `Authorization` header.",
        "headers": {
          "Request-ID": {
            "$ref": "#/components/headers/requestIdHeader"
          },
          "Correlation-ID": {
            "$ref": "#/components/headers/correlationIdHeader"
          },
          "x-protective-marking": {
            "$ref": "#/components/headers/xProtectiveMarkingHeader"
          }
        },
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/errorsResponseSchema"
            },
            "examples": {
              "authorizationError": {
                "$ref": "#/components/examples/authorizationErrorExample"
              }
            }
          }
        }
      },
      "403": {
        "description": "Client Error - Forbidden.\nOperation not allowed.",
        "headers": {
          "Request-ID": {
            "$ref": "#/components/headers/requestIdHeader"
          },
          "Correlation-ID": {
            "$ref": "#/components/headers/correlationIdHeader"
          },
          "x-protective-marking": {
            "$ref": "#/components/headers/xProtectiveMarkingHeader"
          }
        },
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/errorsResponseSchema"
            },
            "examples": {
              "forbiddenError": {
                "$ref": "#/components/examples/forbiddenErrorExample"
              }
            }
          }
        }
      },
      "404": {
        "description": "The requested resource could not be found but may be available in the future. \nSubsequent requests by the client are permissible.",
        "headers": {
          "Request-ID": {
            "$ref": "#/components/headers/requestIdHeader"
          },
          "Correlation-ID": {
            "$ref": "#/components/headers/correlationIdHeader"
          },
          "x-protective-marking": {
            "$ref": "#/components/headers/xProtectiveMarkingHeader"
          }
        },
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/errorsResponseSchema"
            },
            "examples": {
              "notFoundError": {
                "$ref": "#/components/examples/notFoundErrorExample"
              }
            }
          }
        }
      },
      "409": {
        "description": "Client Error - Already created.",
        "headers": {
          "Request-ID": {
            "$ref": "#/components/headers/requestIdHeader"
          },
          "Correlation-ID": {
            "$ref": "#/components/headers/correlationIdHeader"
          },
          "x-protective-marking": {
            "$ref": "#/components/headers/xProtectiveMarkingHeader"
          }
        },
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/errorsResponseSchema"
            },
            "examples": {
              "systemTimeout": {
                "$ref": "#/components/examples/errorResponseExample"
              }
            }
          }
        }
      },
      "500": {
        "description": "Server Error - Internal Server Error. \nA generic error message, given when an unexpected condition was encountered while the server\nwas processing the request. ",
        "headers": {
          "Request-ID": {
            "$ref": "#/components/headers/requestIdHeader"
          },
          "Correlation-ID": {
            "$ref": "#/components/headers/correlationIdHeader"
          },
          "x-protective-marking": {
            "$ref": "#/components/headers/xProtectiveMarkingHeader"
          }
        },
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/errorsResponseSchema"
            },
            "examples": {
              "systemTimeout": {
                "$ref": "#/components/examples/errorResponseExample"
              }
            }
          }
        }
      }
    },
    "examples": {
      "badRequestErrorExample": {
        "description": "An example of a NOT UNDERSTOOD / BAD REQUEST (`400`) error.\nThis can be returned when a **API** call is made with malformed syntax.",
        "value": {
          "errors": [
            {
              "id": "22af5d37-531c-4515-8f91-963249d3744a",
              "code": "ICSIAPI-001",
              "detail": "Missing field in schema POSTed to resource `/flights/arrivals`",
              "source": {
                "location": "REQUEST",
                "parameter": "/data/airlineCode"
              }
            }
          ]
        }
      },
      "authorizationErrorExample": {
        "description": "An example of an AUTHORIZATION (`401`) error.\nThis can be returned when an **API** call does not contain an `Authorization`\nheader.",
        "value": {
          "errors": [
            {
              "id": "6d343ddd-ef1a-4ec3-8bcd-b833295c239a",
              "code": "ICSIAPI-003",
              "detail": "Missing \"Authorization\" Header.",
              "source": {
                "pointer": "Authorization",
                "location": "QUERY"
              }
            }
          ]
        }
      },
      "errorResponseExample": {
        "description": "An example of an ERROR (`500`) error.\nThis can be returned when the **API** encounters an internal error.",
        "value": {
          "errors": [
            {
              "id": "34910168-ff90-410f-a684-8eb89b876ab6",
              "code": "ICSIAPI-001",
              "detail": "System Unavailable.  Try again later."
            }
          ]
        }
      },
      "forbiddenErrorExample": {
        "description": "An example of a FORBIDDEN (`403`) error.\nThis can be returned when an **API** submission is not permitted for a client with\na given `Authorization` header.",
        "value": {
          "errors": [
            {
              "id": "1cdd29dd-a475-4aa7-8c9b-3c9843807ab7",
              "code": "ICSIAPI-003",
              "detail": "Unable to perform POST to /flights/arrivals for ABN 17-376-225-834"
            }
          ]
        }
      },
      "notFoundErrorExample": {
        "description": "An example of a NOT FOUND (`404`) error.\nThis can be returned when a **GET** / **PUT** / **DELETE** request is made for a resource\nthat does not exist. ",
        "value": {
          "errors": [
            {
              "id": "7773a6c1-ad84-4e88-a299-4c257a66a601",
              "code": "ICSIAPI-004",
              "detail": "Cannot find resource `/flights/arrivals/6933bbcb-422f-4135-be13-74677a80dbde`",
              "source": {
                "location": "ID",
                "parameter": "6933bbcb-422f-4135-be13-74677a80dbde"
              }
            }
          ]
        }
      },
      "methodNotAllowedErrorExample": {
        "description": "An example of a METHOD NOT ALLOWED (`405`) error.\nThis can be returned when **GET** / **POST** / ** PUT** / **DELETE** request for is made for\na resource that does not support **GET** / **POST** / ** PUT** / **DELETE**.",
        "value": {
          "errors": [
            {
              "id": "46b1472a-4b19-47bb-91ad-701d38183e94",
              "code": "ICSIAPI-001",
              "detail": "Cannot DELETE resource `/flights`"
            }
          ]
        }
      }
    },
    "headers": {
      "correlationIdHeader": {
        "description": "The **Correlation-ID** header provides a mechanism for a client application to track\nasynchronous API calls through the API gateway to backend systems.\n\nThe **Correlation-ID** is set by the client.\n\nOften a **Correlation-ID** is a client generated UUID:\n\nFor example:\n  \n    Correlation-ID: a0f0b6a6-df37-11e9-8a34-2a2ae2dbcce4",
        "required": false,
        "schema": {
          "type": "string",
          "maxLength": 64,
          "externalDocs": {
            "description": "See: Universally Unique IDentifier (UUID). (RFC-4122).",
            "url": "https://www.ietf.org/rfc/rfc4122.txt"
          }
        },
        "example": "a0f0b6a6-df37-11e9-8a34-2a2ae2dbcce4"
      },
      "locationHeader": {
        "description": "The **Location** response header specifies the path to the resource on the server.",
        "required": true,
        "schema": {
          "type": "string"
        },
        "example": "/flights/departures/033392ba-e83d-4a03-aa8d-d18233fee4d3"
      },
      "requestIdHeader": {
        "description": "The **Request-ID** is provides a mechanism to track requests in **API** logging systems.\n\nThe **Request-ID** is set by the client.\n\nThe **Request-ID** is a UUID uniquely identifying the API call.\n\nFor example:\n\n    Request-ID: c5ff1e52-1c48-4be6-9b53-c966886e539f",
        "required": true,
        "schema": {
          "type": "string",
          "maxLength": 64,
          "externalDocs": {
            "description": "See: Universally Unique IDentifier (UUID). (RFC-4122).",
            "url": "https://www.ietf.org/rfc/rfc4122.txt"
          }
        },
        "example": "c5ff1e52-1c48-4be6-9b53-c966886e539f"
      },
      "transactionIdHeader": {
        "description": "The **Transaction-ID** header is a UUID provided by the consumer.  It identifies a\ntransaction or event chain through potentially a number of API calls, events and\nDepartmental systems.\n\nDepartment systems or platforms that process service requests via SOAP or REST are required\nto provide the **Transaction-ID** HTTP header to enterprise logging platforms, and to\npropagate the header to downstream services.",
        "required": true,
        "schema": {
          "type": "string",
          "maxLength": 64,
          "externalDocs": {
            "description": "See: Universally Unique IDentifier (UUID). (RFC-4122).",
            "url": "https://www.ietf.org/rfc/rfc4122.txt"
          }
        },
        "example": "d7842738-f6da-4e8a-879a-d83203ff9650"
      },
      "xProtectiveMarkingHeader": {
        "description": "While not currently mandatory for data classified below **PROTECTED**, an\n**x-Protective-Marking** header **SHOULD** be provided when the message payload contains\ndata classified at **OFFICIAL** or above.\n\nThe values of the header should align with the appropriate Security classification literals\ndefined in the _Federal Government Protective Security Policy Framework_.",
        "required": true,
        "schema": {
          "type": "string",
          "maxLength": 30,
          "externalDocs": {
            "description": "See: Federal Government Protective Security Policy Framework.",
            "url": "https://www.protectivesecurity.gov.au/information/sensitive-classified-information/Pages/default.aspx"
          }
        },
        "example": "OFFICIAL"
      }
    },
    "parameters": {
      "correlationIdHeader": {
        "name": "Correlation-ID",
        "description": "Optional identifier providing a mechanism for a client application to correlate asynchronous\nAPI calls, e.g.\n\ncorrelation-id: d7842738-f6da-4e8a-879a-d83203ff9650\n\nCorrelation-ID format is not constrained, and may be any string meaningful to the client\napplication. During response processing, the API Gateway will append the correlation\nidentifier to the response headers (if not already propagated back by the provider).\n\nThe Correlation-ID is logged and propagated to the backend provider.",
        "in": "header",
        "required": false,
        "schema": {
          "type": "string",
          "maxLength": 64,
          "externalDocs": {
            "description": "See: Universally Unique IDentifier (UUID). (RFC-4122).",
            "url": "https://www.ietf.org/rfc/rfc4122.txt"
          }
        },
        "example": "a0f0b6a6-df37-11e9-8a34-2a2ae2dbcce4"
      },
      "locationHeader": {
        "name": "Location",
        "description": "The **Location** request header specifies the path to the resource on the server.",
        "in": "header",
        "required": true,
        "schema": {
          "type": "string",
          "externalDocs": {
            "description": "See: Section 7.1.2 of RFC-7231.",
            "url": "https://tools.ietf.org/html/rfc7231#section-7.1.2"
          }
        },
        "example": "/flights/departures/033392ba-e83d-4a03-aa8d-d18233fee4d3"
      },
      "requestIdHeader": {
        "name": "Request-ID",
        "description": "SHOULD be provided and logged by consuming systems to correlate requests in logging systems,\nhowever will be created by the API Gateway if not provided by the API consumer.\n\nUUID uniquely identifying the API call, e.g.\n\nrequest-id: c5ff1e52-1c48-4be6-9b53-c966886e539f\n\nNotes\n- If a Request-ID is received by any department-controlled API in an invocation chain, the\n  same Request-ID should be populated as a header of any request that is sent to a\n  downstream API, to support end-to-end tracing of request processing.\n- The first department-controlled API in an invocation chain should generate a unique\n  Request-ID for each received request, if possible.",
        "in": "header",
        "required": false,
        "schema": {
          "type": "string",
          "maxLength": 64,
          "externalDocs": {
            "description": "See: Universally Unique IDentifier (UUID). (RFC-4122).",
            "url": "https://www.ietf.org/rfc/rfc4122.txt"
          }
        },
        "example": "c5ff1e52-1c48-4be6-9b53-c966886e539f"
      },
      "transactionIdHeader": {
        "name": "Transaction-ID",
        "description": "Client application supplied UUID, identifying a transaction or event chain through\npotentially a number of API calls and events e.g.\n\ntransaction-id: d7842738-f6da-4e8a-879a-d83203ff9650\n\nDepartment systems or platforms that process service requests via REST or SOAP are required\nto provide the Transaction-ID HTTP header or TransactionID SOAP header to enterprise logging\nplatforms, and to propagate the header to downstream services.\n\nNotes\n- Where an API request does not include W3C Trace-Context 'traceparent' and 'tracestate'\n  headers, a 'Transaction-ID' header SHOULD be provided instead.\n- Where W3C Trace-Context headers are not supplied (e.g. external clients, COTS\n  applications), or where cloud-native trace headers are supplied instead (e.g. AWS x-ray),\n  the API Gateway will generate the required headers from transaction or request Ids.\n- Due to this, when trace headers other than the W3C Trace-Context headers are supplied,\n  they should also be populated into the Transaction-ID header to support end-to-end\n  traceability.",
        "in": "header",
        "required": false,
        "schema": {
          "type": "string",
          "maxLength": 64,
          "externalDocs": {
            "description": "See: Universally Unique IDentifier (UUID). (RFC-4122).",
            "url": "https://www.ietf.org/rfc/rfc4122.txt"
          }
        },
        "example": "d7842738-f6da-4e8a-879a-d83203ff9650"
      },
      "xApiKeyHeader": {
        "name": "x-Api-Key",
        "description": "The API Key (~client_id) returned when the client application was registered with the\nenvironment developer portal. This key identifies the client application for accounting and\nmetric purposes, and is cross-matched against the client_id provided in the enterprise\naccess token for stronger application identity assurance.\n\nx-api-key: 05b5796e3301116d3df1f93cd89cf2e1",
        "in": "header",
        "required": true,
        "schema": {
          "type": "string"
        },
        "example": "05b5796e3301116d3df1f93cd89cf2e1"
      },
      "xProtectiveMarkingHeader": {
        "name": "x-Protective-Marking",
        "description": "Must be provided when the message payload contains data classified at 'PROTECTED' or above.\nThe values of the header should align with the appropriate Security classification literals\ndefined in the Protective Security Policy Framework.      ",
        "in": "header",
        "required": true,
        "schema": {
          "type": "string",
          "maxLength": 30,
          "externalDocs": {
            "description": "See: Federal Government Protective Security Policy Framework.",
            "url": "https://www.protectivesecurity.gov.au/information/sensitive-classified-information/Pages/default.aspx"
          }
        },
        "example": "OFFICIAL"
      }
    },
    "securitySchemes": {
      "ClientCredentials": {
        "type": "oauth2",
        "flows": {
          "clientCredentials": {
            "tokenUrl": "securityservices/sps/oauth/oauth20/token",
            "scopes": {
              "ce:tm:c": "create",
              "ce:tm:d": "delete",
              "ce:tm:r": "read",
              "ce:tm:u": "update",
              "ce:mn:c": "create",
              "ce:cs:c": "create",
              "ce:cs:r": "read",
              "ce:cs:d": "delete",
              "ce:cs:u": "update",
              "ce:co:s": "search",
              "ce:co:u": "update",
              "ce:co:d": "delete",
              "ce:mn:r": "read",
              "ce:mn:u": "update",
              "ce:mn:d": "delete",
              "ce:co:c": "create",
              "ce:co:r": "read"
            }
          }
        }
      },
      "AuthorizerScheme": {
        "description": "JWT formatted access token representing identity accessing the management API",
        "type": "oauth2",
        "flows": {
          "authorizationCode": {
            "authorizationUrl": "/securityservices/sps/oauth/oauth20/authorize",
            "tokenUrl": "securityservices/sps/oauth/oauth20/token",
            "refreshUrl": "securityservices/sps/oauth/oauth20/token",
            "scopes": {
              "ce:tm:c": "create",
              "ce:tm:d": "delete",
              "ce:tm:r": "read",
              "ce:tm:u": "update",
              "ce:mn:c": "create",
              "ce:cs:c": "create",
              "ce:cs:r": "read",
              "ce:cs:d": "delete",
              "ce:cs:u": "update",
              "ce:co:s": "search",
              "ce:co:c": "create",
              "ce:co:r": "read",
              "ce:co:u": "update",
              "ce:co:d": "delete",
              "ce:mn:r": "read",
              "ce:mn:u": "update",
              "ce:mn:d": "delete"
            }
          }
        }
      }
    }
  },
  "servers": [
    {
      "url": "/v1"
    }
  ]
}
